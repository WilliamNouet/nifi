morphlines : [
    {
        id : test
        importCommands : [
            "org.kitesdk.morphline.stdio.ReadLineBuilder",
            "org.kitesdk.morphline.stdlib.TryRulesBuilder",
            "org.kitesdk.morphline.stdlib.GrokBuilder",
            "org.kitesdk.morphline.stdlib.SplitBuilder",
            "org.kitesdk.morphline.stdlib.ConvertTimestampBuilder",
            "org.kitesdk.morphline.stdlib.SetValuesBuilder",
        ]

        commands : [
            {
                readLine {
                    charset : UTF-8
                }
            }

            {
                tryRules {
                    catchExceptions : true
                    throwExceptionIfAllRulesFailed : true
                    rules : [
                        {
                            commands : [
                                {
                                    grok {
                                        dictionaryFiles : [grok-dictionaries/grok-patterns]
                                        expressions : {
                                            message : """%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}"""
                                        }
                                    }
                                }

                                {
                                    convertTimestamp {
                                        field : syslog_timestamp
                                        inputFormats : ["MMM d HH:mm:ss"]
                                        outputFormat : "unixTimeInMillis"
                                    }
                                }

                                {
                                    setValues {
                                        key : "success"
                                        value : "@{syslog_timestamp},@{syslog_hostname},@{syslog_program},@{syslog_message}"
                                    }
                                }
                            ]
                        }

                        # Handle exception
                        {
                            commands : [
                                {
                                    setValues {
                                        key : "exception"
                                        value : "@{message}"
                                    }
                                }
                            ]
                        }
                    ]
                }
            }
        ]
    }
]
